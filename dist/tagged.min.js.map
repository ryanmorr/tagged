{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/tagged.js"],"names":["f","exports","module","define","amd","window","global","self","this","tagged","r","e","n","t","o","i","c","require","u","a","Error","code","p","call","length","1","callback","mutator","arguments","undefined","val","strings","_len","values","Array","_key","raw","reduce","acc","str"],"mappings":";CAAA,SAAAA,GAAA,GAAA,iBAAAC,SAAA,oBAAAC,OAAAA,OAAAD,QAAAD,SAAA,GAAA,mBAAAG,QAAAA,OAAAC,IAAAD,OAAA,GAAAH,OAAA,EAAA,oBAAAK,OAAAA,OAAA,oBAAAC,OAAAA,OAAA,oBAAAC,KAAAA,KAAAC,MAAAC,OAAAT,KAAA,CAAA,WAAA,OAAA,SAAAU,EAAAC,EAAAC,EAAAC,GAAA,SAAAC,EAAAC,EAAAf,GAAA,IAAAY,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,IAAAC,EAAA,mBAAAC,SAAAA,QAAA,IAAAjB,GAAAgB,EAAA,OAAAA,EAAAD,GAAA,GAAA,GAAAG,EAAA,OAAAA,EAAAH,GAAA,GAAA,IAAAI,EAAA,IAAAC,MAAA,uBAAAL,EAAA,KAAA,MAAAI,EAAAE,KAAA,mBAAAF,EAAA,IAAAG,EAAAV,EAAAG,GAAA,CAAAd,QAAA,IAAAU,EAAAI,GAAA,GAAAQ,KAAAD,EAAArB,QAAA,SAAAS,GAAA,OAAAI,EAAAH,EAAAI,GAAA,GAAAL,IAAAA,IAAAY,EAAAA,EAAArB,QAAAS,EAAAC,EAAAC,EAAAC,GAAA,OAAAD,EAAAG,GAAAd,QAAA,IAAA,IAAAiB,EAAA,mBAAAD,SAAAA,QAAAF,EAAA,EAAAA,EAAAF,EAAAW,OAAAT,IAAAD,EAAAD,EAAAE,IAAA,OAAAD,EAAA,CAAA,CAAAW,EAAA,CAAA,SAAAR,EAAAf,EAAAD,2ECae,SAAgByB,GAAkC,IAAxBC,EAAwB,EAAAC,UAAAJ,aAAAK,IAAAD,UAAA,GAAAA,UAAA,GAAd,SAACE,GAAD,OAASA,GACxD,OAAO,SAACC,GAAuB,IAAA,IAAAC,EAAAJ,UAAAJ,OAAXS,EAAWC,MAAA,EAAAF,EAAAA,EAAA,EAAA,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAXF,EAAWE,EAAA,GAAAP,UAAAO,GAC3B,OAAOT,EAASK,EAAQK,IAAIC,OAAO,SAACC,EAAKC,EAAKxB,GAC1C,OAAOuB,EAAOX,EAAQM,EAAOlB,EAAI,IAAOwB,wCDhBpD","file":"tagged.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","/**\r\n * Create a tagged template literal function\r\n * by providing a callback function to be\r\n * called with the resulting string. Provide\r\n * a function as an optional second parameter\r\n * to mutate each value passed to template\r\n * literal\r\n *\r\n * @param {Function} callback\r\n * @param {Function} mutator (optional)\r\n * @return {Function}\r\n * @api public\r\n */\r\nexport default function tagged(callback, mutator = (val) => val) {\r\n    return (strings, ...values) => {\r\n        return callback(strings.raw.reduce((acc, str, i) => {\r\n            return acc + (mutator(values[i - 1])) + str;\r\n        }));\r\n    };\r\n}\r\n"]}